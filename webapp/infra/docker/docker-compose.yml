# webapp/infra/docker/docker-compose.yml
services:
  webui:
    build:
      context: ../../
      dockerfile: infra/docker/Dockerfile.webui
    ports:
      - "3000:80"
    environment:
      - VITE_APP_ENV=local
    depends_on:
      api:
        condition: service_started # webui depends on api for data, but api needs couchdb first
    networks:
      - gofannon-net

  api:
    build:
      context: ../../packages/api/user-service
      dockerfile: ../../../infra/docker/Dockerfile.api
    volumes:
      - ../../packages/api/user-service:/app # Mount for hot-reloading
    ports:
      - "8000:8000"
    environment:
      - APP_ENV=local
      - STORAGE_PROVIDER=s3
      - S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - AWS_DEFAULT_REGION=us-east-1
      - DATABASE_PROVIDER=couchdb
      - COUCHDB_URL=http://couchdb:5984/      
    env_file:
      - ./.env
    depends_on:
      minio:
        condition: service_started
      couchdb-setup: 
        condition: service_completed_successfully
    networks:
      - gofannon-net
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  minio:
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    ports:
      - "9000:9000" # API port
      - "9001:9001" # Console port
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio-data:/data
    networks:
      - gofannon-net
    command: server /data --console-address ":9001"

  couchdb:
    image: couchdb:3.3
    ports:
      - "5984:5984"
    environment:
      - COUCHDB_USER=${COUCHDB_USER:-admin}
      - COUCHDB_PASSWORD=${COUCHDB_PASSWORD:-password}
    volumes:
      - couchdb-data:/opt/couchdb/data
    networks:
      - gofannon-net
    healthcheck: # <--- ADD THIS HEALTHCHECK
      test: ["CMD-SHELL", "curl -f http://localhost:5984/ || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s # Give CouchDB some time to warm up before checks begin

  couchdb-setup: # <--- NEW SERVICE FOR COUCHDB INITIALIZATION
    build:
      context: ../../infra/docker # Use the directory where Dockerfile.couchdb-setup and couchdb-init.sh are
      dockerfile: Dockerfile.couchdb-setup
    environment:
      - COUCHDB_USER=${COUCHDB_USER:-admin}
      - COUCHDB_PASSWORD=${COUCHDB_PASSWORD:-password}
      - COUCHDB_URL=http://couchdb:5984/ # Use the internal service name
    depends_on:
      couchdb:
        condition: service_healthy # Wait for couchdb to be healthy before attempting setup
    networks:
      - gofannon-net
    command: /app/couchdb-init.sh # Execute the initialization script

networks:
  gofannon-net:
    driver: bridge

volumes:
  minio-data:
  couchdb-data: