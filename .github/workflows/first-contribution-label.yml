name: First Contribution Label  
  
on:  
  pull_request:  
    types: [opened]  
  workflow_dispatch:  
  
jobs:  
  process-single-pr:  
    if: github.event_name == 'pull_request'  
    runs-on: ubuntu-latest  
    permissions:  
      issues: write  
      pull-requests: read  
    steps:  
      - name: Check if first contribution  
        uses: actions/github-script@v6  
        with:  
          script: |  
            const creator = context.payload.pull_request.user.login;  
            const { data: prs } = await github.rest.pulls.list({  
              owner: context.repo.owner,  
              repo: context.repo.repo,  
              state: 'all',  
              creator: creator  
            });  
            if (prs.length === 1) {  
              await github.rest.issues.addLabels({  
                owner: context.repo.owner,  
                repo: context.repo.repo,  
                issue_number: context.payload.pull_request.number,  
                labels: ['first contribution']  
              });  
            }  
  
  process-all-prs:  
    if: github.event_name == 'workflow_dispatch'  
    runs-on: ubuntu-latest  
    permissions:  
      issues: write  
      pull-requests: read  
    steps:  
      - name: List open PRs  
        id: list-prs  
        run: |  
          prs=$(gh pr list --state open --json number | jq 'map(.number)')  
          echo "prs=$prs" >> $GITHUB_OUTPUT  
        env:  
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
  
      - name: Process each PR  
        uses: actions/github-script@v6  
        with:  
          script: |  
            const prNumbers = JSON.parse('${{ steps.list-prs.outputs.prs }}');  
            for (const prNumber of prNumbers) {  
              const { data: pr } = await github.rest.pulls.get({  
                owner: context.repo.owner,  
                repo: context.repo.repo,  
                pull_number: prNumber  
              });  
              const creator = pr.user.login;  
              const { data: userPrs } = await github.rest.pulls.list({  
                owner: context.repo.owner,  
                repo: context.repo.repo,  
                state: 'all',  
                creator: creator  
              });  
              if (userPrs.length === 1) {  
                await github.rest.issues.addLabels({  
                  owner: context.repo.owner,  
                  repo: context.repo.repo,  
                  issue_number: prNumber,  
                  labels: ['first contribution']  
                });  
              }  
            }  
